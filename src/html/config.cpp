#include "html/config.h"

const char index_html[] PROGMEM = R"rawliteral(
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Watchy Config</title>
    <script type="module" crossorigin>(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const l of n)if(l.type==="childList")for(const t of l.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&s(t)}).observe(document,{childList:!0,subtree:!0});function o(n){const l={};return n.integrity&&(l.integrity=n.integrity),n.referrerPolicy&&(l.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?l.credentials="include":n.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function s(n){if(n.ep)return;n.ep=!0;const l=o(n);fetch(n.href,l)}})();let O=[{type:"category",name:"AP Settings",items:[{type:"text",name:"SSID"},{type:"recursive_multiple_choice",name:"Password",options:[{name:"auto-generated",items:[]},{name:"custom",items:[{type:"text",name:"Password"}]}]},{type:"checkbox",name:"Hidden"}]},{type:"category",name:"WiFi Settings",items:[{type:"list",name:"APs",items:[{type:"text",name:"SSID"},{type:"text",name:"Password"}]}]},{type:"category",name:"Location",items:[{type:"float",name:"Latitude"},{type:"float",name:"Longitude"},{type:"float",name:"rise and set elevation"},{type:"int",name:"UTC Offset"},{type:"checkbox",name:"EU daylight savings time"}]},{type:"category",name:"timetable",items:[{type:"text",name:"url"}]}];function x(y,r,o,s){let n=()=>({});for(let l=0;l<y.length;l++){let t=y[l],i=document.createElement("div");i.className="option",r.appendChild(i);let C=document.createElement("div");C.className="label",C.textContent=t.name,i.appendChild(C);let u;if(t.type==="category"){let e=document.createElement("div");e.className="subcategory",C.onclick=()=>{e.style.display==="none"?e.style.display="unset":e.style.display="none"},i.appendChild(e),u=x(t.items,e,o,s[t.name]??{})}else if(t.type==="text"){let e=document.createElement("input");e.type="text",e.value=s[t.name]??"",i.appendChild(e),i.classList.add("textoption"),u=()=>e.value,e.onchange=o}else if(t.type==="float"){let e=document.createElement("input");e.type="float",e.value=s[t.name]??"0.0",i.appendChild(e),i.classList.add("floatoption"),u=()=>Number.parseFloat(e.value),e.onchange=o}else if(t.type==="int"){let e=document.createElement("input");e.type="int",e.value=s[t.name]??0,i.appendChild(e),i.classList.add("intoption"),u=()=>Number.parseInt(e.value),e.onchange=o}else if(t.type==="checkbox"){let e=document.createElement("input");e.type="checkbox",e.checked=s[t.name]??!1,i.appendChild(e),i.classList.add("checkboxoption"),u=()=>e.checked,e.onchange=o}else if(t.type==="list"){let e=document.createElement("div");e.className="listcontainer",i.appendChild(e);let f=document.createElement("button");f.textContent="Add",i.appendChild(f);let m=[],h=c=>{let a=document.createElement("div");a.className="listitem",e.appendChild(a);let p=x(t.items,a,o,c??{});m.push(p);let g=document.createElement("button");g.textContent="Remove",g.className="removeitembutton",a.appendChild(g),g.onclick=()=>{e.removeChild(a),m=m.filter(E=>E!==p),o()}},d=s[t.name]??[];for(let c=0;c<d.length;c++)h(d[c]);i.classList.add("listoption"),f.onclick=()=>{h({}),o()},u=()=>m.map(c=>c())}else if(t.type==="recursive_multiple_choice"){let e=document.createElement("div"),f=[],m=0,h=()=>{};i.appendChild(e);for(let d=0;d<t.options.length;d++){let c=t.options[d],a=document.createElement("div"),p=document.createElement("div");a.style.opacity="0.5";let g=h;h=()=>{g(),p.classList.remove("selected"),a.style.opacity="0.5"},p.className="radio",d===m&&(p.classList.add("selected"),a.style.opacity="1"),p.textContent=c.name,e.appendChild(p),e.appendChild(a);let E=x(c.items,a,o,s[t.name]===c.name?s:{});f.push(E),p.onclick=()=>{m=d,a.style.display="unset",h(),p.classList.add("selected"),a.style.opacity="1",o()}}u=()=>{let d=f[m]();return d.type=t.options[m].name,d},i.classList.add("recursivemultiplechoiceoption")}let P=n;n=()=>{let e=P();return e[String(t.name)]=u(),e}}return n}const w=await(await fetch("config_get")).json();let v=document.createElement("div");v.id="configcontainer";document.body.appendChild(v);let L=()=>{fetch("config_post",{method:"POST",body:JSON.stringify(N())})},N=x(O,v,()=>{L()},w),S=document.createElement("button");S.textContent="Export";S.onclick=()=>{let y="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(N(),null,2)),r=document.createElement("a");r.setAttribute("href",y),r.setAttribute("download","watchy-config.json"),r.click()};document.body.appendChild(S);let b=document.createElement("input");b.type="file";b.onchange=()=>{if(b.files&&b.files.length>0){let y=b.files[0],r=new FileReader;r.onload=o=>{if(o.target){let s=o.target.result;if(typeof s=="string"){let n=JSON.parse(s);v.innerHTML="",N=x(O,v,()=>{L()},n),L()}}},r.readAsText(y)}};document.body.appendChild(b);</script>
    <style rel="stylesheet" crossorigin>.option,.removeitembutton{margin-left:20px}.textoption,.floatoption,.intoption,.checkboxoption{display:flex}.radio{display:flex;align-items:center;opacity:.7}.radio:before{height:6px;width:6px;border:1px solid rgb(255,255,255);border-radius:50%;content:"";margin-right:5px}.radio.selected{opacity:1}.radio.selected:before{background-color:#fff}.label{margin-right:10px}.listcontainer{display:flex;flex-direction:column;gap:10px}html{background-color:#000;color:#fff}input{background-color:#222;color:#fff;border:1px solid #555}button{background-color:#222;color:#fff;border:1px solid #555;padding:3px;cursor:pointer}body{display:flex;flex-direction:column;gap:15px;padding:10px}</style>
  </head>
  <body>
  </body>
</html>
)rawliteral";
const size_t index_html_len = sizeof(index_html);
